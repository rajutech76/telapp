<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.telapp.auro</groupId>
	<artifactId>auro-persistence</artifactId>
	<version>1.0</version>
	<packaging>jar</packaging>

	<name>auro-persistence</name>
	<url>http://maven.apache.org</url>
	

	<properties>
		<src.debug>true</src.debug>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<packaging>jar</packaging>
		<skiptest>true</skiptest>
		<org.springframework.version>3.2.8.RELEASE</org.springframework.version>
	    <org.hibernate.version>3.6.9.Final</org.hibernate.version>
	    <!-- 4.3.1 hibernate latest version -->
	    
	    
	</properties>
	
	 <repositories>
  		<repository>
   			 <id>java.net2</id>
    		<name>Repository hosting the jee6 artifacts</name>
    		<url>http://download.java.net/maven/2</url>
  		</repository>
  		
  		 <repository>  
            <id>jboss.public.repo</id>  
            <url>https://repository.jboss.org/nexus/content/groups/public/</url>  
        </repository>  
		
		 <repository>
			<id>springsource-milestones</id>
			<name>SpringSource Milestones Proxy</name>
			<url>https://oss.sonatype.org/content/repositories/springsource-milestones</url>
		</repository>
		
		 <repository>
			<id>releases</id>
			<name>Releases</name>
			<url>https://oss.sonatype.org/content/repositories/releases</url>
		</repository>


	</repositories> 

	<dependencies>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.11</version>
				<scope>test</scope>
			</dependency>
			
			<!--
				Core utilities used by other modules.
				Define this if you use Spring Utility APIs (org.springframework.core.*/org.springframework.util.*)
			-->
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-core</artifactId>
			  <version>${org.springframework.version}</version>
			</dependency>
			 
			<!--
				Expression Language (depends on spring-core)
				Define this if you use Spring Expression APIs (org.springframework.expression.*)
			-->
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-expression</artifactId>
			  <version>${org.springframework.version}</version>
			</dependency>
			 
			<!--
				Bean Factory and JavaBeans utilities (depends on spring-core)
				Define this if you use Spring Bean APIs (org.springframework.beans.*)
			-->
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-beans</artifactId>
			  <version>${org.springframework.version}</version>
			</dependency>
			
			<dependency>
				<groupId>c3p0</groupId>
				<artifactId>c3p0</artifactId>
				<version>0.9.1.2</version>
			</dependency>

			 
			<!--
				Aspect Oriented Programming (AOP) Framework (depends on spring-core, spring-beans)
				Define this if you use Spring AOP APIs (org.springframework.aop.*)
			-->
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-aop</artifactId>
			  <version>${org.springframework.version}</version>
			</dependency>
			 
			<!--
				Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans)
				This is the central artifact for Spring's Dependency Injection Container and is generally always defined
			-->
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-context</artifactId>
			  <version>${org.springframework.version}</version>
			</dependency>
			 
			<!--
				Various Application Context utilities, including EhCache, JavaMail, Quartz, and Freemarker integration
				Define this if you need any of these integrations
			-->
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-context-support</artifactId>
			  <version>${org.springframework.version}</version>
			</dependency>
			 
			<!--
				Transaction Management Abstraction (depends on spring-core, spring-beans, spring-aop, spring-context)
				Define this if you use Spring Transactions or DAO Exception Hierarchy
				(org.springframework.transaction.*/org.springframework.dao.*)
			-->
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-tx</artifactId>
			  <version>${org.springframework.version}</version>
			</dependency>
			 
			<!--
				JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, spring-tx)
				Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*)
			-->
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-jdbc</artifactId>
			  <version>${org.springframework.version}</version>
			</dependency>
			 
			<!--
				Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, and iBatis.
				(depends on spring-core, spring-beans, spring-context, spring-tx)
				Define this if you need ORM (org.springframework.orm.*)
			-->
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-orm</artifactId>
			  <version>${org.springframework.version}</version>
			</dependency>
			 
			<!--
				Object-to-XML Mapping (OXM) abstraction and integration with JAXB, JiBX, Castor, XStream, and XML Beans.
				(depends on spring-core, spring-beans, spring-context)
				Define this if you need OXM (org.springframework.oxm.*)
			-->
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-oxm</artifactId>
			  <version>${org.springframework.version}</version>
			</dependency>
			 
			<!--
				Web application development utilities applicable to both Servlet and Portlet Environments
				(depends on spring-core, spring-beans, spring-context)
				Define this if you use Spring MVC, or wish to use Struts, JSF, or another web framework with Spring (org.springframework.web.*)
			-->
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-web</artifactId>
			  <version>${org.springframework.version}</version>
			</dependency>
			 
			<!--
				Spring MVC for Servlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)
				Define this if you use Spring MVC with a Servlet Container such as Apache Tomcat (org.springframework.web.servlet.*)
			-->
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-webmvc</artifactId>
			  <version>${org.springframework.version}</version>
			</dependency>
			 
			<!--
				Spring MVC for Portlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)
				Define this if you use Spring MVC with a Portlet Container (org.springframework.web.portlet.*)
			-->
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-webmvc-portlet</artifactId>
			  <version>${org.springframework.version}</version>
			</dependency>
			 
			<!--
				Support for testing Spring applications with tools such as JUnit and TestNG
				This artifact is generally always defined with a 'test' scope for the integration testing framework and unit testing stubs
			-->
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-test</artifactId>
			  <version>${org.springframework.version}</version>
			  <scope>test</scope>
			</dependency>
			
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>1.6.1</version>
			</dependency>
			
			
			<!--dependency>  
			   <groupId>log4j</groupId>  
			   <artifactId>log4j</artifactId>  
			   <version>1.2.15</version>  
			   <exclusions>  
				 <exclusion>  
				   <groupId>javax.mail</groupId>  
				   <artifactId>mail</artifactId>  
				 </exclusion>  
				 <exclusion>  
				   <groupId>javax.jms</groupId>  
				   <artifactId>jms</artifactId>  
				 </exclusion>  
				 <exclusion>  
				   <groupId>com.sun.jdmk</groupId>  
				   <artifactId>jmxtools</artifactId>  
				 </exclusion>  
				 <exclusion>  
				   <groupId>com.sun.jmx</groupId>  
				   <artifactId>jmxri</artifactId>  
				 </exclusion>  
			   </exclusions>  
			   <scope>runtime</scope>  
			 </dependency -->  
			 
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<!-- version>3.6.3.Final</version-->
				<version>${org.hibernate.version}</version>
			</dependency>
			
			<!-- JPA  Lib -->
			
			<dependency>
	            <groupId>org.hibernate</groupId>
	            <artifactId>hibernate-entitymanager</artifactId>
	            <!-- version>3.6.9.Final</version-->
	            <version>${org.hibernate.version}</version>
	        </dependency>
	        <dependency>
	            <groupId>org.hibernate.javax.persistence</groupId>
	            <artifactId>hibernate-jpa-2.0-api</artifactId>
	            <version>1.0.0.Final</version>
	        </dependency>
			<!--   JPA END -->

			<dependency>
	            <groupId>org.hibernate</groupId>
	            <artifactId>hibernate-entitymanager</artifactId>
	            <version>${org.hibernate.version}</version>
	        </dependency>
	        <dependency>
	            <groupId>org.hibernate.javax.persistence</groupId>
	            <artifactId>hibernate-jpa-2.0-api</artifactId>
	            <version>1.0.0.Final</version>
	        </dependency>

			<dependency>
				<groupId>javassist</groupId>
				<artifactId>javassist</artifactId>
				<version>3.12.1.GA</version>
			</dependency>
		 
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>1.2</version>
				<scope>runtime</scope>
			</dependency>
			
			<dependency>
				<groupId>taglibs</groupId>
				<artifactId>standard</artifactId>
				<version>1.1.2</version>
				<scope>runtime</scope>
			</dependency>
			
			<dependency>
			  <groupId>commons-dbcp</groupId>
			  <artifactId>commons-dbcp</artifactId>
			  <version>1.4</version>
			</dependency>
				
		   <dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>5.1.9</version>
			</dependency>
			
			<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>1.9.1</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.0</version>
		</dependency>
			
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.4.187</version>
		</dependency>	
		
	</dependencies>
	
		<build>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.3.2</version>					
				</plugin>
				
			<plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-jar-plugin</artifactId>
		        <version>2.4</version>
		        <!-- configuration>
		          <includes>
		            <include>**/service/*</include>
		          </includes>
		        </configuration-->
      		</plugin>
				
			</plugins>
		</build>
</project>
