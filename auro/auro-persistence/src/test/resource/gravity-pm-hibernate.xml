<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/aop 
      					http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
    					http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
	default-autowire="byName">
	
	<tx:annotation-driven />

	<!-- data source related classes. To be moved to a separate application 
		context xml later -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">

		<property name="driverClass" value="${database.driver}" />
		<property name="jdbcUrl" value="${database.url}" />
		<property name="user" value="${database.username}" />
		<property name="password" value="${database.password}" />

		<property name="initialPoolSize">
			<value>1</value>
		</property>
		<property name="minPoolSize">
			<value>1</value>
		</property>
		<property name="maxPoolSize">
			<value>5</value>
		</property>
		<property name="idleConnectionTestPeriod">
			<value>300</value>
		</property>
		<property name="checkoutTimeout">
			<value>100000</value>
		</property>
		<property name="acquireIncrement">
			<value>1</value>
		</property>
		<property name="maxStatements">
			<value>0</value>
		</property>  <!-- 0 means: statement caching is turned off. -->
		<property name="numHelperThreads">
			<value>3</value>
		</property>  <!-- 3 is default -->
		<!-- The number of milliseconds a client calling getConnection() will wait 
			for a Connection to be checked-in or acquired when the pool is exhausted. 
			Zero means wait indefinitely. Setting any positive value will cause the getConnection() 
			call to time-out and break with an SQLException after the specified number 
			of milliseconds. -->
		<property name="maxIdleTime">
			<value>3600</value>
		</property>
		<property name="maxIdleTimeExcessConnections">
			<value>300</value>
		</property>
		<property name="testConnectionOnCheckin">
			<value>true</value>
		</property>
		<!-- <property name="preferredTestQuery"><value>select version from schema_info</value></property> -->
	</bean>

	<bean id="dialectProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="hibernate.dialect">${database.dialect}</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.use_sql_comments">true</prop>
				<prop key="hibernate.generate_statistics">false</prop>
				<!-- prop key="hibernate.current_session_context_class">thread</prop -->
				<!-- prop key="hibernate.cache.use_query_cache">true</prop> <prop key="net.sf.ehcache.configurationResourceName">ehcache.xml</prop> 
					<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory
				</prop>
				<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.SingletonEhCacheProvider</prop>
				<prop key="hibernate.search.default.directory_provider">org.hibernate.search.store.FSDirectoryProvider</prop>
				<<prop key="hibernate.hbm2ddl.auto">update</prop> -->
			</props>
		</property>
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="hibernateProperties">
			<ref bean="dialectProperties" />
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.techm.gravity.entity</value>				
			</list>
		</property>
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	
	<bean id="transactionManager"
		 class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		 <property name="sessionFactory" ref="sessionFactory"/>
	</bean>
</beans>
